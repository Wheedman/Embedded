#include <stdlib.h>
#include <stdio.h>
#include <time.h>

#define MILLION  1E6

void waste_msecs (unsigned int msecs){
	int i;
	for(i = 0; i < msecs; i++){
		oneSecMethod();
	}
}

void oneSecMethod(){
	volatile int zero = 0, one = 1, sum;
	int i;
	for(i = 0; i < 1000000; i++){
		sum = zero + one;
	}
}

int main(int argc, char *argv[]) {
	struct timespec start, stop;
	int s,ms;
	if (clock_gettime(CLOCK_REALTIME, &start) == -1) {
			perror("clock gettime");
			return EXIT_FAILURE;
		}

	oneSecMethod();

	if (clock_gettime(CLOCK_REALTIME, &stop) == -1) {
			perror("clock gettime");
			return EXIT_FAILURE;
		}

	s = (stop.tv_sec - start.tv_sec) * 1000;
	ms = (stop.tv_nsec - start.tv_nsec) / MILLION;

	printf("start: %ld, n %ld \n", start.tv_sec, start.tv_nsec);
	printf("stop: %ld, n %ld \n", stop.tv_sec, stop.tv_nsec);
	printf("Waited miliseconds: %d\n", s + ms);

	return EXIT_SUCCESS;
}

